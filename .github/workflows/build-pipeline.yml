name: CI/CD for Multiple Docker Containers

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
   
    - name: Check Out Repo 
      uses: actions/checkout@v2

    - name: Docker Login
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

    - name: Build Docker Test Image 
      run: |
        docker build -t lexluga/react-test -f ./client/Dockerfile.dev ./client

    - name: Test Image After Install
      run: |
        docker run -e CI=true lexluga/react-test npm test -- --coverage


    - name: Build Docker Client
      run: | 
        docker build -t lexluga/multi-client ./client 

    - name: Build Nginx Server
      run: | 
        docker build -t lexluga/multi-nginx ./nginx

    - name: Build API Server
      run: |
        docker build -t lexluga/multi-server ./server

    - name: Build Worker Process
      run: |
        docker build -t lexluga/multi-worker ./worker

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Publish to Docker Hub
      run : | 
        docker push lexluga/multi-client
        docker push lexluga/multi-nginx
        docker push lexluga/multi-server
        docker push lexluga/multi-worker

         
    - name: Get Current Timestamp
      uses: gerred/actions/current-time@master
      id: current-time

    - name: Run String Replace
      uses: frabert/replace-string-action@master
      id: format-time
      with:
        pattern: '[:\.]+'
        string: "${{ steps.current-time.outputs.time }}"
        replace-with: '-'
        flags: 'g'


    - name: Generate deployment package
      run: zip -r deploy.zip *
      
    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
        aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
        application_name: multi-docker
        environment_name: Multidocker-env
        version_label: "docker-app-${{ steps.format-time.outputs.replaced }}"
        region: us-east-2
        bucket_name: multi-docker
        deployment_package: deploy.zip

    - name: Deployed!
      run: echo App deployed to ELB
     

  


     